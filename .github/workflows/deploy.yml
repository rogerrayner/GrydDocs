name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true
        continue-on-error: true
        
      - name: Fallback Setup Pages
        if: failure()
        uses: actions/configure-pages@v4
        continue-on-error: true
        
      - name: Setup Node.js (if needed for any processing)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
        
      - name: Prepare static files
        run: |
          # Ensure .nojekyll exists to bypass Jekyll processing
          touch .nojekyll
          
          # List files to be deployed (for debugging)
          echo "Files to be deployed:"
          find . -name "*.html" -o -name "*.css" -o -name "*.js" -o -name "*.md" | head -20
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
          
      - name: Wait for any previous deployments
        run: |
          echo "Waiting for any previous deployments to complete..."
          sleep 30
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        timeout-minutes: 10
        continue-on-error: false
        
      - name: Retry deployment if failed
        if: failure()
        run: |
          echo "First deployment attempt failed, waiting and retrying..."
          sleep 60
          
      - name: Retry Deploy to GitHub Pages
        if: failure()
        id: deployment-retry
        uses: actions/deploy-pages@v4
        timeout-minutes: 10
        
      - name: Output deployment URL
        run: |
          echo "Deployment completed!"
          if [[ "${{ steps.deployment.conclusion }}" == "success" ]]; then
            echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
          elif [[ "${{ steps.deployment-retry.conclusion }}" == "success" ]]; then
            echo "Site URL: ${{ steps.deployment-retry.outputs.page_url }}"
          fi
          echo "Documentation is now available at: https://rogerrayner.github.io/GrydDocs"
